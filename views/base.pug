Doctype= html 
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet' href='css/vars.css')
    link(rel='stylesheet' href='css/style.css')
    link(rel='stylesheet' href='css/add-user.css')
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css')
    link(rel='stylesheet' href='https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css')
    link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'
      integrity='sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=='
      crossorigin='anonymous'
      referrerpolicy='no-referrer')
    title Document
    style.
      .test{
          border: 1px solid blue;
          }
  body.body
    include _header
    block content
    .home
      .main
        #notification.notification-box
          i.fa-solid.fa-circle-check
          .mess
          .progres
        .left-container
          .search-box
            .frame-271
              .search-here
          .user-container(class=`${dataSet[1].userDisp}`)
            .top-header 
              .users2 Users
              button.add-btn 
                .add add
                i.add-icon.fa-solid.fa-user-plus
            table#users.table.table-striped(style='width:100%')
                  thead
                    tr
                      th(style='background: #1964d4; color: white;') UserId
                      th(style='background: #1964d4; color: white;') Name
                      th(style='background: #1964d4; color: white;') Phone
                      th(style='background: #1964d4; color: white;') Address
                      th(style='background: #1964d4; color: white;') VehicleId
                      th(style='background: #1964d4; color: white;') Balance
                      th(style='background: #1964d4; color: white;') Action
                  tbody
                    each row in dataSet[0]
                      tr.user-records(data-userid=`${row.UserID}`)
                        td= row.UserID
                        td= row.UserName
                        td= row.Phone
                        td= row.UserAddress
                        td= row.VehicleID
                        td= row.AccountBalance
                        td.delete-record
                          i.trash-icon.fa-solid.fa-trash-can
                    
          .vehicles-container(class=`${dataSet[1].vehcDisp}`)
            .top-header 
              .users2 Vehicles
            table#vehicles.table.table-striped(style='width:100%')
                  thead
                    tr
                      th(style='background: #1964d4; color: white;') VehicleID
                      th(style='background: #1964d4; color: white;') UserID
                      th(style='background: #1964d4; color: white;') LicensePlate
                      th(style='background: #1964d4; color: white;') VehicleType
                  tbody
                    each row in  dataSet[0]
                      tr.user-records(data-userid=`${row.VehicleID}`)
                        td= row.VehicleID
                        td= row.UserID
                        td= row.licensePlate
                        td= row.VehicleType
          .transactions-container(class=`${dataSet[1].transDisp}`) 
            .top-header 
              .users2 Transactions
              //- .today= `Today-Collected = ${dataSet[3]}`
            table#transactions.table.table-striped(style='width:100%')
                  thead
                    tr
                      th(style='background: #1964d4; color: white;') TransactionID
                      th(style='background: #1964d4; color: white;') UserID
                      th(style='background: #1964d4; color: white;') Name
                      th(style='background: #1964d4; color: white;') VehicleID
                      th(style='background: #1964d4; color: white;') Timestamp
                      th(style='background: #1964d4; color: white;') Amount
                      th(style='background: #1964d4; color: white;') Status
                  tbody
                    each row in  dataSet[0]
                      tr.user-records(data-userid=`${row.TransactionID}`)
                        td= row.TransactionID
                        td= row.UserID
                        td= row.Name
                        td= row.VehicleID
                        td= row.Timestamp
                        td= row.Amount
                        td= row.Status            
        form.right-container#data-container(action='/update' method='POST' enctype='multipart/form-data')
          .user-profile-box 
            button.edit-btn(class=`${dataSet[2].UserID==null?'hidden':'app'}` type='button')
                i.edit-icon.fa-solid.fa-pen-to-square
                .edit-label edit
            button.save-btn.edit-btn.hidden(type='submit')
                i.save-icon.fa-solid.fa-floppy-disk
                .edit-label update
            .user-pic 
              .frame-371 
                img.drivers-pic(src=`${dataSet[2].photo!=null?dataSet[2].photo:'images/user.png'}`)  
              input.photo.hidden(type="file" name='photo')
          .user-detail-box 
            .detail-label 
              .all-details All details
            .detail-container
              .uid 
                .frame-262 
                  .uid2 UID
                .uid-input
                  input.inputs.inact(type='text' name='UserID' disabled value =`${dataSet[2].UserID==null?'No data found':dataSet[2].UserID}`)
              .uid 
                .frame-262 
                  .name2 Name
                .uid-input
                  input.inputs.inact(type='text' name='UserName' disabled value =`${dataSet[2].UserName==null?'No data found':dataSet[2].UserName}`)
              .uid 
                .frame-262 
                  .name2 Phone
                .uid-input
                  input.inputs.inact(type='text' name='Phone' disabled value =`${dataSet[2].Phone==null?'No data found':dataSet[2].Phone}`)
              .uid 
                .frame-262 
                  .name2 Address
                .uid-input
                  input.inputs.inact(type='text' name='UserAddress' disabled value =`${dataSet[2].UserAddress==null?'No data found':dataSet[2].UserAddress}`)
              .uid 
                .frame-262
                  .vehicle-id2 VehicleID
                .uid-input
                  input.inputs.inact(type='text' name='vehicleId' disabled value =`${dataSet[2].VehicleID==null?'No data found':dataSet[2].VehicleID}`)
              .uid
                .frame-262
                  .vehicle-id2 LicenseNo
                .uid-input
                  input.inputs.inact(type='text' name='licensePlate' disabled value =`${dataSet[2].LicenseNumber==null?'No data found':dataSet[2].LicenseNumber}`)
              .uid
                .frame-262 
                  .vehicle-id2 VehType
                .uid-input
                  input.inputs.inact(type='text' name='vehicleType' disabled value =`${dataSet[2].VehicleType==null?'No data found':dataSet[2].VehicleType}`)
              .uid
                .frame-262
                  .balance2 Balance
                .uid-input
                  input.inputs.inact(type='text' name='AccountBalance' disabled value =`${dataSet[2].AccountBalance==null?'No data found':`${dataSet[2].AccountBalance} ETB`}`)
              
    .black-bg.hidden
    form.add-modal-container.hidden(action='/users' method='POST' enctype='multipart/form-data')
      .top-header-user
        i.add-icon-user.fa-solid.fa-user-plus
        .add-label
          .frame-258
            .add-user-information Add User Information
          .address-box
            .photo-label
              i.upload-icon.fa-solid.fa-cloud-arrow-up
            .photo-input(style='margin-right: -305px;')
              input.inputs(type='file' name='image') 
      .err-msg
      .content
        .left
          .uid-box
            .uid-label
              .user-id UserID
            .uid-input
              input.inputs(type='text' placeholder='your OID' name='UserID')
          .name-box
            .name-label 
              .name Name
            .name-input
              input.inputs(type='text' placeholder='your OID' name='UserName')
          .phonebox
            .phone-label
              .phone Phone
            .phone-input
              input.inputs(type='text' placeholder='your OID' name='Phone')
          .address-box
            .address-label
              .address Address
            .address-input
              input.inputs(type='text' placeholder='your OID' name='UserAddress')
          
        img.middle-line
        .right
          .vehicle-id-box
            .vaehicle-id-label
              .vehicle-id VehicleID
            .vaehicle-id-input
              input.inputs(type='text' placeholder='your OID' name='vehicleId')
          .plate-box
            .plate-
              .license-plate LicensePlate
            .plate-label2
              input.inputs(type='text' placeholder='your OID' name='licensePlate')
          .vaehicle-type-box
            .vaehicle-type-label
              .vehicle-type VehicleType
            .vaehicle-type-input
              input.inputs(type='text' placeholder='your OID' name='vehicleType')
          .balance-box
            .balance-label
              .balance Balance
            .balance-input
              input.inputs(type='text' placeholder='your OID' name='AccountBalance')
           
      .bottom-btns
        button.cancel-btn(type='button')
          .cancel Cancel
        button.register-btns(type='submit')
          .register Register
    script(src='https://code.jquery.com/jquery-3.7.0.js')
    script(src='https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js')
    script(src='https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js')
    script(src='sock.js')
    script.
      new DataTable('#users');
      new DataTable('#vehicles');
      new DataTable('#transactions');
    
      document.querySelector("#users_filter label input:first-child").setAttribute("placeholder", "Search here...");
      document.querySelector("#vehicles_filter label input:first-child").setAttribute("placeholder", "Search here...");
      document.querySelector("#transactions_filter label input:first-child").setAttribute("placeholder", "Search here...");
      
      const users_btn = document.querySelector(".users");
      const vehicles_btn = document.querySelector(".vehicles");
      const transactions_btn = document.querySelector(".transaction");
      //- const staticstics_btn = document.querySelector(".staticstics");
      const add_btn  = document.querySelector(".add-btn ");
      const add_modal_container  = document.querySelector(".add-modal-container");
      const black_bg  = document.querySelector(".black-bg");
      const cancel_btn  = document.querySelector(".cancel-btn");
      const body  = document.querySelector('.body');

      const ws = new WebSocket("ws://localhost:3000");

      ws.onmessage = (event) => {
        const dataContainer = document.getElementById("data-container");

        let content= JSON.parse(event.data);
        console.log(event.data);
        let msg='';
        let msg_color='';
        if(content.AccountBalance != null){
            if(content.AccountBalance > 25){
              msg='Access granted';
              msg_color='background:rgb(27 182 176 / 16%)';
              }
            else {
              msg='Insufficient balance!';
              msg_color='background:rgb(255 122 153 / 19%)';
              }
        }
        else{
          msg='access denied';
          msg_color='background:rgb(255 122 153 / 19%)';
        }
        console.log(msg);
        dataContainer.innerHTML = `
       <div class="right-container" id="data-container">
      <div class="user-profile-box"> 
        <div class="user-pic"> 
          <div class="frame-371"> <img class="drivers-pic" src="${content.photo!=null?content.photo:'images/user.png'}"/></div>
        </div>
      </div>
      <div class="user-detail-box"> 
          <div class="detail-label"> 
            <div class="all-details">All details</div>
          </div>
          <div class="detail-container"> 
            <div class="uid"> 
              <div class="frame-262"> 
                <div class="uid2">UID</div>
              </div>
              <div class="frame-263">
                <div class="gg-74873-yhhvhc">${content.UserID!=null?content.UserID:'no data found'}</div>
              </div>
            </div>
            <div class="name"> 
              <div class="frame-262"> 
                <div class="name2">Name</div>
              </div>
              <div class="frame-263">
                <div class="gg-74873-yhhvhc">${content.UserName!=null?content.UserName:'no data found'}</div>
              </div>
            </div>
            <div class="vehicle-id"> 
              <div class="frame-2622"> 
                <div class="name2">VehicleID</div>
              </div>
              <div class="frame-263"> 
                <div class="gg-74873-yhhvhc">${content.VehicleID!=null?content.VehicleID:'no data found'}</div>
              </div>
            </div>
            <div class="balance"> 
              <div class="frame-2622"> 
                <div class="balance2">Balance</div>
              </div>
              <div class="frame-263"> 
                <div class="_2-000-etb">${content.AccountBalance!=null?(content.AccountBalance>25?content.AccountBalance-25:content.AccountBalance):'no data found'}</div>
              </div>
            </div>
            <div class="status"> 
              <div class="frame-2622"> 
                <div class="status2">Status</div>
              </div>
              <div class="frame-263" style='${msg_color}';} "> 
                <div class="access-granted">${msg}</div>
              </div>
            </div>
          </div>
          </div>
          </div>`;
          console.log(JSON.parse(event.data));
      };    
      users_btn.addEventListener("click", () => {
        window.location.href = "/users";
      });
      vehicles_btn.addEventListener("click", () => {
        window.location.href = "/vehicles";
      });
      transactions_btn.addEventListener("click", () => {
        window.location.href = "/transactions";
      });
      
     
      add_btn.addEventListener("click", () => {
        add_modal_container.classList.remove('hidden');
        black_bg.classList.remove('hidden');
        body.style.overflow = 'hidden';
      });
      black_bg.addEventListener("click", () => {
        add_modal_container.classList.add('hidden');
        black_bg.classList.add('hidden');
        body.style.overflow = 'auto';
      });
      cancel_btn.addEventListener('click', () => {
        add_modal_container.classList.add('hidden');
        black_bg.classList.add('hidden');
        body.style.overflow = 'auto';
      });
     // Event listener for the delete buttons
      // Event listener for the delete buttons
      var del_btn = document.querySelectorAll('.delete-record');
      del_btn.forEach((button) => {
        button.addEventListener('click', function (e) {
          // Use a confirmation dialog to confirm the deletion
          var userId=this.closest('.user-records').dataset.userid;
          var confirmDelete = confirm(`Are you sure you want to delete record with UserID:[ ${userId}] ?`);

          if (confirmDelete) {
            console.log('deleted ' + userId);

            // Send the data to the server using an HTTP request
            fetch('/delete', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ userId: userId })
            })
            .then(response => {
              if (response.ok) {
                // Handle successful response from the server
                console.log('Record deleted successfully');
                var url = window.location.href.split('?')[0];
                window.location.href = url + `?success=Record deleted successfully`;
                // Perform any additional actions, such as updating the UI
              } else {
                // Handle error response from the server
                console.error('Failed to delete record');
              }
            })
            .catch(error => {
              // Handle network error
              console.error('Network error occurred', error);
            });
          }
        });
      });

            // Event listener for the user-records buttons
      var userRecordsButtons = document.querySelectorAll('.user-records');
      userRecordsButtons.forEach((button) => {
          button.addEventListener('click', function (e) {
              //- e.preventDefault();
              console.log('clicked');
              var userId = this.dataset.userid;
              var url = window.location.href.split('?')[0];
              window.location.href = url + '?id=' + userId;
              
          });
      const saveBtn = document.querySelector('.save-btn');
      const editBtn = document.querySelector('.edit-btn');
      const inputFields = document.querySelectorAll('.uid-input input');
      const photoInput = document.querySelector('.user-pic img');
      const activeInp = document.querySelectorAll('.inputs'); // Add the name attribute to your file input

      // Add event listener to the Edit button
      editBtn.addEventListener('click', function () {
          // Toggle the visibility of the Edit and Save buttons
          editBtn.classList.add('hidden');
          saveBtn.classList.remove('hidden');
          activeInp.forEach((input) => {
          input.classList.remove('inact');
          })
    
          // Enable input fields
          inputFields.forEach((input) => {
              input.removeAttribute('disabled');
          });
          document.querySelector('.user-pic input[name="photo"]').classList.remove('hidden')

          // Show the file input for photo upload
          //- photoUploadInput.removeAttribute('disabled');
      });
      });
      // Get references to relevant elements
      const uploadIcon = document.querySelector('.upload-icon');
      const Input = document.querySelector('.user-pic input[name="photo"]');
      const photoDisplay = document.querySelector('.drivers-pic');

      // Add event listener to the upload icon for triggering file input click
      uploadIcon.addEventListener('click', function () {
          // Trigger the click event on the hidden file input
          Input.click();
      });

      // Add event listener to the file input for photo selection
      Input.addEventListener('change', function (event) {
          // Handle photo upload, e.g., display the selected photo
          const file = event.target.files[0];
          if (file) {
              const reader = new FileReader();
              reader.onload = function (e) {
                  photoDisplay.src = e.target.result;
              };
              reader.readAsDataURL(file);
          }
      });
      // Retrieve the success query parameter from the URL
      const urlParams = new URLSearchParams(window.location.search);
      const successMessage = urlParams.get('success');

      // Display the success notification if the message is available
      if (successMessage) {
        const notificationBox = document.getElementById('notification');
        document.querySelector('.mess').textContent = successMessage;
        notificationBox.style.right = '4%';

        // Animate the notification box
        notificationBox.classList.add('notification-box');

        // Hide the notification box after 3 seconds
        setTimeout(() => {
          notificationBox.style.right= '-100%';
        }, 7000);
      }
      // Get the URL query parameters
      const urlPar = new URLSearchParams(window.location.search);
      // Get the value of the 'message' parameter
      var message = urlPar.get('message');
      var succ = urlPar.get('success');

      // Check if the message exists and display the modal
      if (message) {
        console.log(succ);
        document.querySelector('.add-modal-container').classList.remove('hidden');
        document.querySelector('.err-msg').innerHTML=message;
        document.querySelector('.black-bg').classList.remove('hidden');
      }
      

            
      

      
